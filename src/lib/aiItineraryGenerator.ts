import axios from "axios";
import { differenceInDays, format, parseISO, addDays, isValid } from "date-fns";
import { ptBR } from "date-fns/locale";

const DEEPSEEK_API_URL = "https://api.deepseek.com"; // Ou sua URL configurada

interface TripData {
  destination: string;
  startDate: string; // Espera-se formato ISO string (ex: "2024-12-25T03:00:00.000Z")
  endDate: string; // Espera-se formato ISO string
  interests: string[];
  budget: string; // Ex: "Econ√¥mico", "Moderado", "Luxuoso"
}

// Fun√ß√£o auxiliar para garantir que as datas s√£o v√°lidas
function parseValidDate(dateString: string, dateLabel: string): Date {
  const parsedDate = parseISO(dateString);
  if (!isValid(parsedDate)) {
    throw new Error(`Formato de data inv√°lido para ${dateLabel}: ${dateString}. Use o formato ISO.`);
  }
  return parsedDate;
}

export async function generateItineraryWithAI(tripData: TripData): Promise<string> {
  const apiKey = process.env.DEEPSEEK_API_KEY;
  if (!apiKey) {
    console.error("DEEPSEEK_API_KEY n√£o est√° configurada nas vari√°veis de ambiente do servidor.");
    throw new Error("Chave da API de IA n√£o configurada no servidor.");
  }

  try {
    const startDate = parseValidDate(tripData.startDate, "Data de In√≠cio");
    const endDate = parseValidDate(tripData.endDate, "Data de T√©rmino");

    let tripDuration = differenceInDays(endDate, startDate) + 1;

    if (tripDuration <= 0) {
      throw new Error("A data final deve ser igual ou posterior √† data inicial.");
    }
    if (tripDuration > 30) {
      // Limite para evitar prompts e respostas muito longos
      console.warn(`A dura√ß√£o da viagem (${tripDuration} dias) √© longa. Limitando a 30 dias para a IA.`);
      tripDuration = 30; // Opcional: limitar a dura√ß√£o para a IA
      // Ou pode-se lan√ßar um erro se preferir n√£o limitar:
      // throw new Error("A dura√ß√£o da viagem √© muito longa para gerar um roteiro detalhado (m√°x. 30 dias).");
    }

    const buildDynamicPrompt = (tripData: TripData): string => {
      return `Voc√™ √© um especialista em planejamento de viagens com conhecimento detalhado sobre ${tripData.destination}. Crie um roteiro de viagem personalizado seguindo RIGOROSAMENTE este formato:
    
    ### Roteiro de Viagem para ${tripData.destination} (${format(tripData.startDate, "dd 'de' MMMM 'de' yyyy", { locale: ptBR })} a ${format(tripData.endDate, "dd 'de' MMMM 'de' yyyy", {
        locale: ptBR,
      })})
    
    ---
    
    ${Array.from(
      { length: tripDuration },
      (_, i) => `
    #### Dia ${i + 1} (${format(addDays(tripData.startDate, i), "dd 'de' MMMM", { locale: ptBR })}):
    
    **üïê Manh√£:**
    üéå [NOME DA ATIVIDADE - Ex: Visita ao Museu Nacional]
    ‚úèÔ∏è [DESCRI√á√ÉO BREVE - MAX 2 LINHAS. Ex: Explore a hist√≥ria e a arte local. Destaque as principais exposi√ß√µes.]
    üìç [ENDERE√áO COMPLETO - Ex: Rua XV de Novembro, 123, Centro]
    üí∞ [CUSTO ESTIMADO - Ex: R$ 20 por pessoa]
    üå§Ô∏è [DICA DE CLIMA/VESTU√ÅRIO - 1 LINHA. Ex: Use roupas leves e confort√°veis.]
    
    **üïê Tarde:**
    üéå [NOME DA ATIVIDADE - Ex: Passeio de Barco pela Ba√≠a]
    ‚úèÔ∏è [DESCRI√á√ÉO BREVE - MAX 2 LINHAS. Ex: Desfrute de vistas panor√¢micas da cidade. Observe a vida marinha local.]
    üìç [ENDERE√áO COMPLETO - Ex: Cais dos Pescadores, s/n, Beira Mar]
    üí∞ [CUSTO ESTIMADO - Ex: R$ 50 por pessoa]
    üå§Ô∏è [DICA DE CLIMA/VESTU√ÅRIO - 1 LINHA. Ex: Leve um casaco, pois pode ventar.]
    
    **üïê Noite:**
    üéå [NOME DA ATIVIDADE - Ex: Jantar em Restaurante T√≠pico]
    ‚úèÔ∏è [DESCRI√á√ÉO BREVE - MAX 2 LINHAS. Ex: Saboreie pratos tradicionais da regi√£o. Experimente a culin√°ria local.]
    üìç [ENDERE√áO COMPLETO - Ex: Rua da Praia, 456, Centro Hist√≥rico]
    üí∞ [CUSTO ESTIMADO - Ex: R$ 80 por pessoa]
    üå§Ô∏è [DICA DE CLIMA/VESTU√ÅRIO - 1 LINHA. Ex: Vista-se casualmente elegante.]
    
    ---`
    ).join("\n")}
    
    Considere as seguintes informa√ß√µes ao criar o roteiro:
    - Interesses principais: ${tripData.interests.join(", ")} (Ex: hist√≥ria, natureza, gastronomia)
    - Faixa de or√ßamento: ${tripData.budget} (Ex: Econ√¥mico, Moderado, Luxo)
    
    Instru√ß√µes importantes:
    1. Siga RIGOROSAMENTE o formato fornecido acima, incluindo os emojis e a estrutura de cada se√ß√£o (Manh√£, Tarde, Noite).
    2. Mantenha as descri√ß√µes CONCISAS, com no m√°ximo 2 linhas, focando nos pontos mais importantes da atividade.
    3. Inclua APENAS as informa√ß√µes solicitadas dentro dos colchetes []. N√£o adicione detalhes extras ou informa√ß√µes que n√£o foram pedidas.
    4. N√ÉO adicione nenhum texto ou explica√ß√£o adicional no in√≠cio ou no final do roteiro. Comece diretamente com "### Roteiro de Viagem" e termine ap√≥s o √∫ltimo dia.
    5. Priorize experi√™ncias aut√™nticas e locais, evitando pontos tur√≠sticos excessivamente populares.
    6. Equilibre atividades f√≠sicas (caminhadas, esportes) e culturais (museus, teatros), oferecendo variedade ao viajante.
    7. Inclua op√ß√µes para diferentes condi√ß√µes meteorol√≥gicas (atividades ao ar livre e em locais fechados), para que o roteiro seja flex√≠vel.
    8. Varie os tipos de atividades ao longo dos dias (ex: n√£o coloque dois museus seguidos).
    9. Otimize o tempo de deslocamento entre as atividades, agrupando locais pr√≥ximos sempre que poss√≠vel.
    
    Exemplo de como preencher cada campo:
    - **üéå NOME DA ATIVIDADE:** Coloque o nome da atra√ß√£o ou atividade.
    - **‚úèÔ∏è DESCRI√á√ÉO BREVE:** Descreva a atividade em poucas palavras, destacando o que a torna especial.
    - **üìç ENDERE√áO COMPLETO:** Inclua o endere√ßo completo para facilitar a localiza√ß√£o.
    - **üí∞ CUSTO ESTIMADO:** Indique o custo aproximado da atividade por pessoa.
    - **üå§Ô∏è DICA DE CLIMA/VESTU√ÅRIO:** Sugira roupas ou acess√≥rios adequados para o clima previsto.
    
    Este prompt foi projetado para gerar uma sa√≠da que corresponda EXATAMENTE ao formato desejado, garantindo a consist√™ncia e a qualidade do roteiro.`;
    };

    const messages = [
      {
        role: "system",
        content:
          "Voc√™ √© um assistente especializado em cria√ß√£o de roteiros de viagem detalhados e personalizados. Forne√ßa informa√ß√µes precisas e relevantes, seguindo estritamente o formato solicitado.",
      },
      {
        role: "user",
        content: buildDynamicPrompt(tripData),
      },
    ];

    const aiResponse = await axios.post(
      `${DEEPSEEK_API_URL}/chat/completions`,
      { model: "deepseek-chat", messages, temperature: 0.6, max_tokens: 4090 },
      { headers: { Authorization: `Bearer ${apiKey}`, "Content-Type": "application/json" } }
    );

    if (aiResponse.data && aiResponse.data.choices && aiResponse.data.choices[0] && aiResponse.data.choices[0].message) {
      return aiResponse.data.choices[0].message.content || "";
    } else {
      console.error("Estrutura de resposta inesperada da API Deepseek:", aiResponse.data);
      throw new Error("Resposta inesperada da API de IA.");
    }
  } catch (error) {
    console.error("Erro na gera√ß√£o do roteiro pela IA:", error);
    if (axios.isAxiosError(error)) {
      console.error("Detalhes do erro Axios:", error.response?.status, error.response?.data);
    }
    throw new Error("Falha ao comunicar com a IA para gerar roteiro.");
  }
}
